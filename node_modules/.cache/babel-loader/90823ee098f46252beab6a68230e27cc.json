{"ast":null,"code":"var _jsxFileName = \"G:\\\\js_todo\\\\todo\\\\src\\\\components\\\\TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; //rce tab\n\n/* Se crei un metodo custom, quindi diverso dai soliti devi fare il bind\r\n * perchè sia visibile all'interno della tua classe.. anche se è li dentro\r\n * Con l'arrow function non è necessario invece..\r\n*/\n\nexport class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#f4f4f4',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  render() {\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), title, React.createElement(\"button\", {\n      style: btnStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"x\")));\n  }\n\n} //validation to make sure the prop has the right type\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nexport default TodoItem;","map":{"version":3,"sources":["G:/js_todo/todo/src/components/TodoItem.js"],"names":["React","Component","PropTypes","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","render","id","title","markComplete","bind","btnStyle","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AAEA;;;;;AAKA,OAAO,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAEpCG,QAFoC,GAEzB,MAAK;AACZ,aAAM;AACFC,QAAAA,UAAU,EAAE,SADV;AAEFC,QAAAA,OAAO,EAAE,MAFP;AAGFC,QAAAA,YAAY,EAAE,iBAHZ;AAIFC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ3D,OAAN;AAMH,KATmC;AAAA;;AAapCC,EAAAA,MAAM,GAAG;AAAA,6BACiB,KAAKH,KAAL,CAAWC,IAD5B;AAAA,UACGG,EADH,oBACGA,EADH;AAAA,UACOC,KADP,oBACOA,KADP;AAEL,WACI;AAAK,MAAA,KAAK,EAAE,KAAKV,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAC7B,IAD6B,EACxBH,EADwB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGMC,KAHN,EAIK;AAAQ,MAAA,KAAK,EAAEG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJL,CADJ,CADJ;AAUH;;AAzBmC,C,CA4BxC;;AACAd,QAAQ,CAACe,SAAT,GAAqB;AACjBR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBC;AADN,CAArB;AAMA,eAAejB,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//rce tab\r\n\r\n/* Se crei un metodo custom, quindi diverso dai soliti devi fare il bind\r\n * perchè sia visibile all'interno della tua classe.. anche se è li dentro\r\n * Con l'arrow function non è necessario invece..\r\n*/ \r\n\r\nexport class TodoItem extends Component {\r\n\r\n    getStyle = () =>{\r\n        return{\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type='checkbox' onChange={this.props.markComplete.bind(\r\n                        this,id )}/>\r\n                     {title } \r\n                     <button style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//validation to make sure the prop has the right type\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired\r\n}\r\n\r\n\r\n\r\nexport default TodoItem\r\n"]},"metadata":{},"sourceType":"module"}