{"ast":null,"code":"var _jsxFileName = \"G:\\\\js_todo\\\\todo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport About from './components/pages/About';\nimport AddTodo from './components/AddTodo';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }));\n    };\n\n    this.addTodo = title => {\n      axios.post('http://localhost:5000/data.html', {\n        title: title,\n        completed: false,\n        id: this.state.todos.length\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/data.html').then(res => this.setState({\n      todos: res.data\n    }));\n  }\n\n  /* addTodo = (title) =>{\n     console.log(\"sono dentro add TODO\");\n     const todo={\n       title:title,\n       id: this.state.todos.length\n     };\n     return fetch('http://localhost:5000/data.html',{\n       method: 'POST',\n       body: \"prova scema\",\n       headers: {\n       \"Content-Type\": \"application/json\"\n     },\n     credentials: \"same-origin\"\n     })\n     \n     //.then(response => console.log(response.json()))\n     .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n     \n   }*/\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todo: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["G:/js_todo/todo/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","About","AddTodo","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","delete","then","res","filter","addTodo","title","post","length","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport About from './components/pages/About';\nimport AddTodo from './components/AddTodo';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state= {\n    todos:[]\n  }\n\n  \n  componentDidMount(){\n    axios.get('http://localhost:5000/data.html')\n      .then(res => this.setState({ todos: res.data }))\n  }\n \n  markComplete = (id) => { \n    this.setState ({ todos:this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) });\n  }\n\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then ( res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n  }\n    \n  \n\n  addTodo = (title) => {\n    axios.post('http://localhost:5000/data.html', {\n      title: title,\n      completed: false,\n      id: this.state.todos.length\n    })\n      .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n    \n  }\n\n /* addTodo = (title) =>{\n    console.log(\"sono dentro add TODO\");\n    const todo={\n      title:title,\n      id: this.state.todos.length\n    };\n    return fetch('http://localhost:5000/data.html',{\n      method: 'POST',\n      body: \"prova scema\",\n      headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n    })\n    \n    //.then(response => console.log(response.json()))\n    .then(res => this.setState({ todos: [...this.state.todos, res.data] }));\n    \n  }*/\n  \n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                  <AddTodo addTodo={this.addTodo }/>\n                  <Todos todo={this.state.todos} \n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About}>\n\n            </Route>\n            \n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}