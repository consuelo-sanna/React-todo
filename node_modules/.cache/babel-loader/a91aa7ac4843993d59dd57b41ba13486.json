{"ast":null,"code":"import _classCallCheck from\"G:\\\\js_todo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\js_todo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"G:\\\\js_todo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"G:\\\\js_todo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"G:\\\\js_todo\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';//rce tab\n/* Se crei un metodo custom, quindi diverso dai soliti devi fare il bind\r\n * perchè sia visibile all'interno della tua classe.. anche se è li dentro\r\n * Con l'arrow function non è necessario invece..\r\n*/export var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);function TodoItem(){var _getPrototypeOf2;var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getStyle=function(){return{background:'#f4f4f4',padding:'10px',borderBottom:'1px #ccc dotted',textDecoration:_this.props.todo.completed?'line-through':'none'};};return _this;}_createClass(TodoItem,[{key:\"render\",value:function render(){var _this$props$todo=this.props.todo,id=_this$props$todo.id,title=_this$props$todo.title;return React.createElement(\"div\",{style:this.getStyle()},React.createElement(\"p\",null,React.createElement(\"input\",{type:\"checkbox\",onChange:this.props.markComplete.bind(this,id)}),title,React.createElement(\"button\",{onClick:this.props.delTodo.bind(this,id),style:btnStyle},\"x\")));}}]);return TodoItem;}(Component);//validation to make sure the prop has the right type\nvar btnStyle={background:'#ff0000',color:'#fff',border:'none',padding:'5px 9px',borderRadius:'50%',cursors:'pointer',float:'right'};export default TodoItem;","map":{"version":3,"sources":["G:/js_todo/todo/src/components/TodoItem.js"],"names":["React","Component","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","id","title","markComplete","bind","delTodo","btnStyle","color","border","borderRadius","cursors","float"],"mappings":"ihBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAGA;AAEA;;;EAKA,UAAaC,CAAAA,QAAb,uYAEIC,QAFJ,CAEe,UAAK,CACZ,MAAM,CACFC,UAAU,CAAE,SADV,CAEFC,OAAO,CAAE,MAFP,CAGFC,YAAY,CAAE,iBAHZ,CAIFC,cAAc,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CAA4B,cAA5B,CAA6C,MAJ3D,CAAN,CAMH,CATL,2EAaa,sBACiB,KAAKF,KAAL,CAAWC,IAD5B,CACGE,EADH,kBACGA,EADH,CACOC,KADP,kBACOA,KADP,CAEL,MACI,4BAAK,KAAK,CAAE,KAAKT,QAAL,EAAZ,EACI,6BACI,6BAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,KAAKK,KAAL,CAAWK,YAAX,CAAwBC,IAAxB,CAC7B,IAD6B,CACxBH,EADwB,CAAjC,EADJ,CAGMC,KAHN,CAIK,8BAAQ,OAAO,CAAE,KAAKJ,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,CAA8BH,EAA9B,CAAjB,CAAoD,KAAK,CAAEK,QAA3D,MAJL,CADJ,CADJ,CAUH,CAzBL,sBAA8Bf,SAA9B,EA4BA;AAOA,GAAMe,CAAAA,QAAQ,CAAC,CACXZ,UAAU,CAAE,SADD,CAEXa,KAAK,CAAE,MAFI,CAGXC,MAAM,CAAE,MAHG,CAIXb,OAAO,CAAE,SAJE,CAKXc,YAAY,CAAC,KALF,CAMXC,OAAO,CAAC,SANG,CAOXC,KAAK,CAAC,OAPK,CAAf,CAWA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//rce tab\r\n\r\n/* Se crei un metodo custom, quindi diverso dai soliti devi fare il bind\r\n * perchè sia visibile all'interno della tua classe.. anche se è li dentro\r\n * Con l'arrow function non è necessario invece..\r\n*/ \r\n\r\nexport class TodoItem extends Component {\r\n\r\n    getStyle = () =>{\r\n        return{\r\n            background: '#f4f4f4',\r\n            padding: '10px',\r\n            borderBottom: '1px #ccc dotted',\r\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        const { id, title } = this.props.todo;\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <p>\r\n                    <input type='checkbox' onChange={this.props.markComplete.bind(\r\n                        this,id )}/>\r\n                     {title } \r\n                     <button onClick={this.props.delTodo.bind(this, id)} style={btnStyle}>x</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//validation to make sure the prop has the right type\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle={\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 9px',\r\n    borderRadius:'50%',\r\n    cursors:'pointer',\r\n    float:'right'\r\n\r\n}\r\n\r\nexport default TodoItem\r\n"]},"metadata":{},"sourceType":"module"}